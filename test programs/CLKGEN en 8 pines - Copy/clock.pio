.program clock


	set pindirs 15
.wrap_target
    set pins 15  
	set pins 0    
.wrap



% c-sdk {
static inline void clock_program_init(PIO pio, uint sm, uint offset, uint base_pin, float divider) {
    pio_sm_config c = clock_program_get_default_config(offset);
    
	// Map the state machine's OUT pin group to one pin, namely the `pin`
    // parameter to this function.
    sm_config_set_set_pins(&c, base_pin, 4);
	
    // Set this pin's GPIO function (connect PIO to the pad)
    for (int i=0; i<=3; i++)
	{
		pio_gpio_init(pio, base_pin+i);
	}
    // Set the pin direction to output at the PIO
    pio_sm_set_consecutive_pindirs(pio, sm, base_pin, 4, true);
	// Set PIO's frequency divider
	sm_config_set_clkdiv(&c, divider);	
    // Load our configuration, and jump to the start of the program
    pio_sm_init(pio, sm, offset, &c);
    // Set the state machine running
    pio_sm_set_enabled(pio, sm, true);
}
%}
